package testsoap12binding

import (
	"github.com/grid-x/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://foo.bar.com/HelloWorld/1.0"

// NewTest creates an initializes a Test.
func NewTest(cli *soap.Client) Test {
	return &test{cli}
}

// Test was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type Test interface {
	// HelloWorld was auto-generated from WSDL.
	HelloWorld(HelloRequest string) (string, error)
}

// Operation wrapper for HelloWorld.
// OperationHelloWorldMessageIn was auto-generated from WSDL.
type OperationHelloWorldMessageIn struct {
	HelloRequest *HelloRequest `xml:"HelloRequest,omitempty" json:"HelloRequest,omitempty" yaml:"HelloRequest,omitempty"`
}

// Operation wrapper for HelloWorld.
// OperationHelloWorldMessageOut was auto-generated from WSDL.
type OperationHelloWorldMessageOut struct {
	HelloResponse *HelloResponse `xml:"HelloResponse,omitempty" json:"HelloResponse,omitempty" yaml:"HelloResponse,omitempty"`
}

// test implements the Test interface.
type test struct {
	cli *soap.Client
}

// HelloWorld was auto-generated from WSDL.
func (p *test) HelloWorld(HelloRequest string) (string, error) {
	α := struct {
		OperationHelloWorldMessageIn `xml:"tns:HelloWorld"`
	}{
		OperationHelloWorldMessageIn{
			&HelloRequest,
		},
	}

	γ := struct {
		OperationHelloWorldMessageOut `xml:"HelloWorldResponse"`
	}{}
	if err := p.cli.RoundTripSoap12("http://example.com/Test/HelloWorldRequest", α, &γ); err != nil {
		return "", err
	}
	return *γ.HelloResponse, nil
}
