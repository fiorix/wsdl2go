package dataendpointhttpbinding

import (
	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://pdf.host.com"

// NewDataEndpointPortType creates an initializes a DataEndpointPortType.
func NewDataEndpointPortType(cli *soap.Client) DataEndpointPortType {
	return &dataEndpointPortType{cli}
}

// DataEndpointPortType was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type DataEndpointPortType interface {
	// GetData was auto-generated from WSDL.
	GetData(_return *GetData) (*GetDataResp, error)
}

// BaseReq was auto-generated from WSDL.
type BaseReq struct {
	ClientIdentification *ClientIdentification `xml:"clientIdentification,omitempty" json:"clientIdentification,omitempty" yaml:"clientIdentification,omitempty"`
	TestAttr             string                `xml:"TestAttr,attr,omitempty" json:"TestAttr,attr,omitempty" yaml:"TestAttr,attr,omitempty"`
}

// BaseResp was auto-generated from WSDL.
type BaseResp struct {
	ErrorDetails *ErrorDetails `xml:"errorDetails,omitempty" json:"errorDetails,omitempty" yaml:"errorDetails,omitempty"`
	Success      *bool         `xml:"success,omitempty" json:"success,omitempty" yaml:"success,omitempty"`
}

// DataGenerationReq was auto-generated from WSDL.
type DataGenerationReq struct {
	ClientIdentification  *ClientIdentification `xml:"clientIdentification,omitempty" json:"clientIdentification,omitempty" yaml:"clientIdentification,omitempty"`
	TestAttr              string                `xml:"TestAttr,attr,omitempty" json:"TestAttr,attr,omitempty" yaml:"TestAttr,attr,omitempty"`
	CustomerAccountNumber *string               `xml:"customerAccountNumber,omitempty" json:"customerAccountNumber,omitempty" yaml:"customerAccountNumber,omitempty"`
	PdfGenerationReqType  *int                  `xml:"pdfGenerationReqType,omitempty" json:"pdfGenerationReqType,omitempty" yaml:"pdfGenerationReqType,omitempty"`
	WithCreditTranferForm *bool                 `xml:"withCreditTranferForm,omitempty" json:"withCreditTranferForm,omitempty" yaml:"withCreditTranferForm,omitempty"`
	TypeAttrXSI           string                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DataGenerationReq) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DataGenerationReq"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://pdf.host.com/xsd"
	}
}

// DataGenerationResp was auto-generated from WSDL.
type DataGenerationResp struct {
	ErrorDetails  *ErrorDetails `xml:"errorDetails,omitempty" json:"errorDetails,omitempty" yaml:"errorDetails,omitempty"`
	Success       *bool         `xml:"success,omitempty" json:"success,omitempty" yaml:"success,omitempty"`
	Pdf           *[]byte       `xml:"pdf,omitempty" json:"pdf,omitempty" yaml:"pdf,omitempty"`
	Url           *string       `xml:"url,omitempty" json:"url,omitempty" yaml:"url,omitempty"`
	TypeAttrXSI   string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DataGenerationResp) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DataGenerationResp"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://pdf.host.com/xsd"
	}
}

// GetData was auto-generated from WSDL.
type GetData struct {
	Request *DataGenerationReq `xml:"request,omitempty" json:"request,omitempty" yaml:"request,omitempty"`
}

// GetDataResp was auto-generated from WSDL.
type GetDataResp struct {
	Return *DataGenerationResp `xml:"return,omitempty" json:"return,omitempty" yaml:"return,omitempty"`
}

// Operation wrapper for GetData.
// OperationGetDataReq was auto-generated from WSDL.
type OperationGetDataReq struct {
	Return *GetData `xml:"return,omitempty" json:"return,omitempty" yaml:"return,omitempty"`
}

// Operation wrapper for GetData.
// OperationGetDataResp was auto-generated from WSDL.
type OperationGetDataResp struct {
	Return *GetDataResp `xml:"return,omitempty" json:"return,omitempty" yaml:"return,omitempty"`
}

// dataEndpointPortType implements the DataEndpointPortType interface.
type dataEndpointPortType struct {
	cli *soap.Client
}

// GetData was auto-generated from WSDL.
func (p *dataEndpointPortType) GetData(_return *GetData) (*GetDataResp, error) {
	α := struct {
		OperationGetDataReq `xml:"ns:getData"`
	}{
		OperationGetDataReq{
			_return,
		},
	}

	γ := struct {
		OperationGetDataResp `xml:"getDataResponse"`
	}{}
	if err := p.cli.RoundTripWithAction("GetData", α, &γ); err != nil {
		return nil, err
	}
	return γ.Return, nil
}
